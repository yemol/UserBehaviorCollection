#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserBehaviorCollection
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UserBehavior")]
	public partial class UserBehaviorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPageVisit(PageVisit instance);
    partial void UpdatePageVisit(PageVisit instance);
    partial void DeletePageVisit(PageVisit instance);
    partial void InsertUserVisit(UserVisit instance);
    partial void UpdateUserVisit(UserVisit instance);
    partial void DeleteUserVisit(UserVisit instance);
    #endregion
		
		public UserBehaviorDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["UserBehaviorConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UserBehaviorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserBehaviorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserBehaviorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserBehaviorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PageVisit> PageVisits
		{
			get
			{
				return this.GetTable<PageVisit>();
			}
		}
		
		public System.Data.Linq.Table<UserVisit> UserVisits
		{
			get
			{
				return this.GetTable<UserVisit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageVisit")]
	public partial class PageVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageIdentity;
		
		private System.Guid _UserIdentity;
		
		private string _PagePath;
		
		private System.Nullable<System.DateTime> _StartAccess;
		
		private System.Nullable<System.DateTime> _LastActiveTime;
		
		private string _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdentityChanging(System.Guid value);
    partial void OnPageIdentityChanged();
    partial void OnUserIdentityChanging(System.Guid value);
    partial void OnUserIdentityChanged();
    partial void OnPagePathChanging(string value);
    partial void OnPagePathChanged();
    partial void OnStartAccessChanging(System.Nullable<System.DateTime> value);
    partial void OnStartAccessChanged();
    partial void OnLastActiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActiveTimeChanged();
    partial void OnActionsChanging(string value);
    partial void OnActionsChanged();
    #endregion
		
		public PageVisit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageIdentity", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageIdentity
		{
			get
			{
				return this._PageIdentity;
			}
			set
			{
				if ((this._PageIdentity != value))
				{
					this.OnPageIdentityChanging(value);
					this.SendPropertyChanging();
					this._PageIdentity = value;
					this.SendPropertyChanged("PageIdentity");
					this.OnPageIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdentity", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserIdentity
		{
			get
			{
				return this._UserIdentity;
			}
			set
			{
				if ((this._UserIdentity != value))
				{
					this.OnUserIdentityChanging(value);
					this.SendPropertyChanging();
					this._UserIdentity = value;
					this.SendPropertyChanged("UserIdentity");
					this.OnUserIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagePath", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PagePath
		{
			get
			{
				return this._PagePath;
			}
			set
			{
				if ((this._PagePath != value))
				{
					this.OnPagePathChanging(value);
					this.SendPropertyChanging();
					this._PagePath = value;
					this.SendPropertyChanged("PagePath");
					this.OnPagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAccess", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartAccess
		{
			get
			{
				return this._StartAccess;
			}
			set
			{
				if ((this._StartAccess != value))
				{
					this.OnStartAccessChanging(value);
					this.SendPropertyChanging();
					this._StartAccess = value;
					this.SendPropertyChanged("StartAccess");
					this.OnStartAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActiveTime
		{
			get
			{
				return this._LastActiveTime;
			}
			set
			{
				if ((this._LastActiveTime != value))
				{
					this.OnLastActiveTimeChanging(value);
					this.SendPropertyChanging();
					this._LastActiveTime = value;
					this.SendPropertyChanged("LastActiveTime");
					this.OnLastActiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actions", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				if ((this._Actions != value))
				{
					this.OnActionsChanging(value);
					this.SendPropertyChanging();
					this._Actions = value;
					this.SendPropertyChanged("Actions");
					this.OnActionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserVisit")]
	public partial class UserVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserIdentity;
		
		private string _browser;
		
		private string _os;
		
		private string _ip;
		
		private string _OtherUserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdentityChanging(System.Guid value);
    partial void OnUserIdentityChanged();
    partial void OnbrowserChanging(string value);
    partial void OnbrowserChanged();
    partial void OnosChanging(string value);
    partial void OnosChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnOtherUserInfoChanging(string value);
    partial void OnOtherUserInfoChanged();
    #endregion
		
		public UserVisit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdentity", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserIdentity
		{
			get
			{
				return this._UserIdentity;
			}
			set
			{
				if ((this._UserIdentity != value))
				{
					this.OnUserIdentityChanging(value);
					this.SendPropertyChanging();
					this._UserIdentity = value;
					this.SendPropertyChanged("UserIdentity");
					this.OnUserIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser", DbType="VarChar(50)")]
		public string browser
		{
			get
			{
				return this._browser;
			}
			set
			{
				if ((this._browser != value))
				{
					this.OnbrowserChanging(value);
					this.SendPropertyChanging();
					this._browser = value;
					this.SendPropertyChanged("browser");
					this.OnbrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_os", DbType="VarChar(50)")]
		public string os
		{
			get
			{
				return this._os;
			}
			set
			{
				if ((this._os != value))
				{
					this.OnosChanging(value);
					this.SendPropertyChanging();
					this._os = value;
					this.SendPropertyChanged("os");
					this.OnosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherUserInfo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string OtherUserInfo
		{
			get
			{
				return this._OtherUserInfo;
			}
			set
			{
				if ((this._OtherUserInfo != value))
				{
					this.OnOtherUserInfoChanging(value);
					this.SendPropertyChanging();
					this._OtherUserInfo = value;
					this.SendPropertyChanged("OtherUserInfo");
					this.OnOtherUserInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
